name: CD
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install Dependencies
        run: npm install
      - name: Create env file
        run: |
          touch .env
          echo FIREBASE_API_KEY= ${{ secrets.FIREBASE_API_KEY }} >> .env
          echo FIREBASE_APP_ID= ${{ secrets.FIREBASE_APP_ID }} >> .env
          echo FIREBASE_AUTH_DOMAIN= ${{ secrets.FIREBASE_AUTH_DOMAIN }} >> .env
          echo FIREBASE_DATA_BASEURL= ${{ secrets.FIREBASE_DATA_BASEURL }} >> .env
          echo FIREBASE_MEASUREMENT_ID= ${{ secrets.FIREBASE_MEASUREMENT_ID }} >> .env
          echo FIREBASE_MESSAGING_SENDER_ID= ${{ secrets.FIREBASE_MESSAGING_SENDER_ID }} >> .env
          echo FIREBASE_PROJECT_ID= ${{ secrets.FIREBASE_PROJECT_ID }} >> .env
          echo FIREBASE_STORAGE_BUCKET= ${{ secrets.FIREBASE_STORAGE_BUCKET }} >> .env
          echo SENTRY_DSN= ${{ secrets.SENTRY_DSN }} >> .env
          cat .env
      - name: Build
        run: npm run build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
